version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: dpis_postgres
    environment:
      POSTGRES_DB: dpis_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - dpis_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: dpis_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dpis_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dpis_backend
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=dpis_db
      - DB_USER=postgres
      - DB_PASS=postgres_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - ENCRYPTION_KEY=0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef
      - GOOGLE_AI_API_KEY=AIzaSyAwqpc46sKzvTaKAd49t03G6vrTkwX_uFw
      - CRISIS_HOTLINE=+91-9152987821
      - COUNSELOR_EMAIL=counselor@college.edu
      - CORS_ORIGIN=http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    networks:
      - dpis_network

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dpis_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:3001/api
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - dpis_network

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: dpis_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - dpis_network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  dpis_network:
    driver: bridge
